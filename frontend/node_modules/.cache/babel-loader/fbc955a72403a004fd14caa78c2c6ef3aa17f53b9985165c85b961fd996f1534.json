{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Desktop\\\\chat_bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus, MessageCircle } from \"lucide-react\"; // Importado MessageCircle para o placeholder\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  // ✅ Buscar todas as conversas\n  const fetchConversations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:8000/conversations\");\n      console.log(\"Conversas carregadas:\", res.data);\n      setConversations(res.data);\n      if (res.data.length > 0) {\n        // Seleciona automaticamente a primeira conversa existente\n        selectConversation(res.data[0]);\n      } else {\n        setSelectedConversation(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // ✅ Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/conversations\", {\n        title\n      });\n      console.log(\"Nova conversa criada:\", res.data);\n      setConversations(prev => [res.data, ...prev]);\n      setNewConversationTitle(\"\");\n      await selectConversation(res.data);\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err.response || err);\n      alert(\"Erro ao criar conversa. Verifique o console para detalhes.\");\n    }\n  };\n\n  // ✅ Selecionar conversa e carregar mensagens\n  const selectConversation = async conversation => {\n    if (!conversation || !conversation.id) {\n      console.warn(\"Nenhuma conversa válida selecionada:\", conversation);\n      setSelectedConversation(null);\n      setMessages([]);\n      return;\n    }\n    setSelectedConversation(conversation);\n    console.log(\"Selecionando conversa:\", conversation);\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/messages/${conversation.id}`);\n      console.log(\"Mensagens carregadas:\", res.data);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(\"Erro ao buscar mensagens:\", err.response || err);\n      setMessages([]);\n    }\n  };\n\n  // ✅ Enviar mensagem\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    if (!selectedConversation || !selectedConversation.id) {\n      alert(\"Selecione uma conversa antes de enviar uma mensagem!\");\n      return;\n    }\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n\n    // Exibe mensagem do usuário imediatamente\n    const userMsg = {\n      user: \"Você\",\n      content: userMessage\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        message: userMessage,\n        conversation_id: selectedConversation.id\n      });\n      console.log(\"Resposta do servidor:\", res.data);\n      const aiMessage = {\n        user: \"Bot\",\n        content: res.data.response\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err.response || err);\n      const errorMessage = {\n        user: \"Bot\",\n        content: \"❌ Erro ao enviar. Tente novamente.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // NOVO CONTAINER PRINCIPAL: app-container para centralização e sombra\n    _jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Conversas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"title-input\",\n            value: newConversationTitle,\n            onChange: e => setNewConversationTitle(e.target.value),\n            placeholder: \"T\\xEDtulo da conversa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNewConversation,\n            className: \"add-button\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-list\",\n          children: [conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhuma conversa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 42\n          }, this), conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conv.id ? \"selected\" : \"\"}`,\n            onClick: () => selectConversation(conv),\n            children: conv.title\n          }, conv.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: selectedConversation ? selectedConversation.title : \"Chat Gemini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), !selectedConversation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages no-conversation\",\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            size: 64,\n            style: {\n              marginBottom: '20px',\n              color: '#dadce0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bem-vindo ao Chat Gemini!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Crie uma nova conversa ou selecione uma existente na barra lateral para come\\xE7ar a interagir.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), selectedConversation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${m.user === \"Você\" ? \"user\" : \"bot\"}`,\n              children: [m.user !== \"Você\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-user-label\",\n                children: [m.user, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 47\n              }, this), m.content]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message bot typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendMessage,\n            className: \"message-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"message-input\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              placeholder: \"Digite sua mensagem...\",\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"send-button\",\n              disabled: loading || !inputMessage.trim(),\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"NE2KumL3QLwvSHppfdcs/S8+Ez8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Send","Plus","MessageCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","inputMessage","setInputMessage","newConversationTitle","setNewConversationTitle","loading","setLoading","fetchConversations","res","get","console","log","data","length","selectConversation","err","error","createNewConversation","title","trim","post","prev","response","alert","conversation","id","warn","sendMessage","e","preventDefault","userMessage","userMsg","user","content","message","conversation_id","aiMessage","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","size","map","conv","style","marginBottom","color","m","i","onSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Rafael/Desktop/chat_bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus, MessageCircle } from \"lucide-react\"; // Importado MessageCircle para o placeholder\nimport \"./App.css\";\n\nfunction App() {\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  // ✅ Buscar todas as conversas\n  const fetchConversations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:8000/conversations\");\n      console.log(\"Conversas carregadas:\", res.data);\n      setConversations(res.data);\n\n      if (res.data.length > 0) {\n        // Seleciona automaticamente a primeira conversa existente\n        selectConversation(res.data[0]);\n      } else {\n        setSelectedConversation(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // ✅ Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/conversations\", { title });\n      console.log(\"Nova conversa criada:\", res.data);\n      setConversations((prev) => [res.data, ...prev]);\n      setNewConversationTitle(\"\");\n      await selectConversation(res.data);\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err.response || err);\n      alert(\"Erro ao criar conversa. Verifique o console para detalhes.\");\n    }\n  };\n\n  // ✅ Selecionar conversa e carregar mensagens\n  const selectConversation = async (conversation) => {\n    if (!conversation || !conversation.id) {\n      console.warn(\"Nenhuma conversa válida selecionada:\", conversation);\n      setSelectedConversation(null);\n      setMessages([]);\n      return;\n    }\n\n    setSelectedConversation(conversation);\n    console.log(\"Selecionando conversa:\", conversation);\n\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/messages/${conversation.id}`);\n      console.log(\"Mensagens carregadas:\", res.data);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(\"Erro ao buscar mensagens:\", err.response || err);\n      setMessages([]);\n    }\n  };\n\n  // ✅ Enviar mensagem\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    if (!selectedConversation || !selectedConversation.id) {\n      alert(\"Selecione uma conversa antes de enviar uma mensagem!\");\n      return;\n    }\n\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n    \n    // Exibe mensagem do usuário imediatamente\n    const userMsg = { user: \"Você\", content: userMessage };\n    setMessages((prev) => [...prev, userMsg]);\n\n    setLoading(true);\n\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        message: userMessage,\n        conversation_id: selectedConversation.id,\n      });\n\n      console.log(\"Resposta do servidor:\", res.data);\n\n      const aiMessage = { user: \"Bot\", content: res.data.response };\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err.response || err);\n      const errorMessage = { user: \"Bot\", content: \"❌ Erro ao enviar. Tente novamente.\" };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    // NOVO CONTAINER PRINCIPAL: app-container para centralização e sombra\n    <div className=\"app-container\">\n      {/* Barra lateral */}\n      <div className=\"sidebar\">\n        <h2>Conversas</h2>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"title-input\" \n            value={newConversationTitle}\n            onChange={(e) => setNewConversationTitle(e.target.value)}\n            placeholder=\"Título da conversa\"\n          />\n          <button onClick={createNewConversation} className=\"add-button\"> \n            <Plus size={18} />\n          </button>\n        </div>\n\n        <div className=\"conversation-list\">\n          {conversations.length === 0 && <p>Nenhuma conversa</p>}\n          {conversations.map((conv) => (\n            <div\n              key={conv.id}\n              className={`conversation-item ${\n                selectedConversation?.id === conv.id ? \"selected\" : \"\"\n              }`}\n              onClick={() => selectConversation(conv)}\n            >\n              {conv.title}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Área principal de chat */}\n      <div className=\"chat-area\">\n        {/* Cabeçalho de Chat */}\n        <div className=\"header\">\n            {selectedConversation ? selectedConversation.title : \"Chat Gemini\"}\n        </div>\n        \n        {/* Placeholder para Início */}\n        {!selectedConversation && (\n            <div className=\"messages no-conversation\">\n                <MessageCircle size={64} style={{ marginBottom: '20px', color: '#dadce0' }} />\n                <h3>Bem-vindo ao Chat Gemini!</h3>\n                <p>Crie uma nova conversa ou selecione uma existente na barra lateral para começar a interagir.</p>\n            </div>\n        )}\n\n        {/* Mensagens e Formulário de Chat */}\n        {selectedConversation && (\n            <>\n                {/* Container de mensagens */}\n                <div className=\"messages\">\n                {messages.map((m, i) => (\n                    <div\n                    key={i}\n                    className={`message ${m.user === \"Você\" ? \"user\" : \"bot\"}`}\n                    >\n                        {/* NOVO: Rótulo de usuário Bot com estilo de placeholder */}\n                        {m.user !== \"Você\" && <span className=\"message-user-label\">{m.user}: </span>} \n                        {m.content}\n                    </div>\n                ))}\n                {/* Indicador de carregamento */}\n                {loading && (\n                    <div className=\"message bot typing-indicator\">\n                        <div className=\"dot\"></div>\n                        <div className=\"dot\"></div>\n                        <div className=\"dot\"></div>\n                    </div>\n                )}\n                </div>\n\n                {/* Formulário de Input */}\n                <form onSubmit={sendMessage} className=\"message-form\">\n                <input\n                    type=\"text\"\n                    className=\"message-input\" \n                    value={inputMessage}\n                    onChange={(e) => setInputMessage(e.target.value)}\n                    placeholder=\"Digite sua mensagem...\"\n                    disabled={loading}\n                />\n                <button \n                    type=\"submit\" \n                    className=\"send-button\"\n                    disabled={loading || !inputMessage.trim()}\n                >\n                    <Send size={20} />\n                </button>\n                </form>\n            </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}