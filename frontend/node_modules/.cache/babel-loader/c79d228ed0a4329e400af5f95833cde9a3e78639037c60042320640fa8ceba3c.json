{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Desktop\\\\chat_bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus, MessageSquare } from \"lucide-react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const API_BASE = \"http://127.0.0.1:8000\";\n\n  // Configuração global do axios para evitar problemas de CORS\n  const axiosInstance = axios.create({\n    baseURL: API_BASE,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Listar conversas ao iniciar\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n  const fetchConversations = async () => {\n    try {\n      const res = await axiosInstance.get(\"/conversations\");\n      setConversations(res.data);\n      if (res.data.length > 0 && !selectedConversation) {\n        selectConversation(res.data[0]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axiosInstance.post(\"/conversations\", {\n        title\n      });\n      const newConv = {\n        id: res.data.conversation_id,\n        title: res.data.title,\n        messages: []\n      };\n      setConversations(prev => [newConv, ...prev]);\n      setSelectedConversation(newConv);\n      setMessages([]);\n      setNewConversationTitle(\"\");\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err);\n      alert(\"Erro ao criar conversa.\");\n    }\n  };\n\n  // Selecionar conversa\n  const selectConversation = conv => {\n    setSelectedConversation(conv);\n    setMessages(conv.messages || []);\n  };\n\n  // Enviar mensagem\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim() || !selectedConversation) return;\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n    setLoading(true);\n\n    // Mensagem temporária local\n    const tempMessage = {\n      user: \"Você\",\n      content: userMessage\n    };\n    setMessages(prev => [...prev, tempMessage]);\n    try {\n      const res = await axiosInstance.post(\"/chat\", {\n        conversation_id: selectedConversation.id,\n        message: userMessage\n      });\n      const botMessage = {\n        user: \"Bot\",\n        content: res.data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Atualiza conversa local com mensagens\n      setConversations(prev => prev.map(c => c.id === selectedConversation.id ? {\n        ...c,\n        messages: [...(c.messages || []), tempMessage, botMessage]\n      } : c));\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err);\n      alert(\"Erro ao enviar mensagem.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Conversas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newConversationTitle,\n          onChange: e => setNewConversationTitle(e.target.value),\n          placeholder: \"T\\xEDtulo da conversa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewConversation,\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list\",\n        children: [conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma conversa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 42\n        }, this), conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conv.id ? \"selected\" : \"\"}`,\n          onClick: () => selectConversation(conv),\n          children: conv.title\n        }, conv.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat Gemini\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.8em\",\n            color: \"#007bff\",\n            marginLeft: \"8px\"\n          },\n          children: \"LangChain + OpenAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        style: {\n          flexGrow: 1,\n          overflowY: \"auto\"\n        },\n        children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.user === \"Você\" ? \"user\" : \"bot\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [m.user, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), m.content]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: \"Bot est\\xE1 digitando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: selectedConversation ? \"Digite sua mensagem...\" : \"Selecione uma conversa\",\n          disabled: !selectedConversation || loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedConversation || loading || !inputMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NE2KumL3QLwvSHppfdcs/S8+Ez8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Send","Plus","MessageSquare","jsxDEV","_jsxDEV","App","_s","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","inputMessage","setInputMessage","newConversationTitle","setNewConversationTitle","loading","setLoading","API_BASE","axiosInstance","create","baseURL","headers","fetchConversations","res","get","data","length","selectConversation","err","console","error","createNewConversation","title","trim","post","newConv","id","conversation_id","prev","alert","conv","sendMessage","e","preventDefault","userMessage","tempMessage","user","content","message","botMessage","response","map","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","size","style","fontSize","color","marginLeft","flexGrow","overflowY","m","i","onSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Rafael/Desktop/chat_bot/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus, MessageSquare } from \"lucide-react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const API_BASE = \"http://127.0.0.1:8000\";\n\n  // Configuração global do axios para evitar problemas de CORS\n  const axiosInstance = axios.create({\n    baseURL: API_BASE,\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n\n  // Listar conversas ao iniciar\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  const fetchConversations = async () => {\n    try {\n      const res = await axiosInstance.get(\"/conversations\");\n      setConversations(res.data);\n      if (res.data.length > 0 && !selectedConversation) {\n        selectConversation(res.data[0]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axiosInstance.post(\"/conversations\", { title });\n      const newConv = { id: res.data.conversation_id, title: res.data.title, messages: [] };\n      setConversations((prev) => [newConv, ...prev]);\n      setSelectedConversation(newConv);\n      setMessages([]);\n      setNewConversationTitle(\"\");\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err);\n      alert(\"Erro ao criar conversa.\");\n    }\n  };\n\n  // Selecionar conversa\n  const selectConversation = (conv) => {\n    setSelectedConversation(conv);\n    setMessages(conv.messages || []);\n  };\n\n  // Enviar mensagem\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || !selectedConversation) return;\n\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n    setLoading(true);\n\n    // Mensagem temporária local\n    const tempMessage = { user: \"Você\", content: userMessage };\n    setMessages((prev) => [...prev, tempMessage]);\n\n    try {\n      const res = await axiosInstance.post(\"/chat\", {\n        conversation_id: selectedConversation.id,\n        message: userMessage,\n      });\n\n      const botMessage = { user: \"Bot\", content: res.data.response };\n      setMessages((prev) => [...prev, botMessage]);\n\n      // Atualiza conversa local com mensagens\n      setConversations((prev) =>\n        prev.map((c) =>\n          c.id === selectedConversation.id\n            ? { ...c, messages: [...(c.messages || []), tempMessage, botMessage] }\n            : c\n        )\n      );\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err);\n      alert(\"Erro ao enviar mensagem.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"sidebar\">\n        <h2>Conversas</h2>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={newConversationTitle}\n            onChange={(e) => setNewConversationTitle(e.target.value)}\n            placeholder=\"Título da conversa\"\n          />\n          <button onClick={createNewConversation}>\n            <Plus size={16} />\n          </button>\n        </div>\n        <div className=\"conversation-list\">\n          {conversations.length === 0 && <p>Nenhuma conversa</p>}\n          {conversations.map((conv) => (\n            <div\n              key={conv.id}\n              className={`conversation-item ${\n                selectedConversation?.id === conv.id ? \"selected\" : \"\"\n              }`}\n              onClick={() => selectConversation(conv)}\n            >\n              {conv.title}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"chat-area\">\n        <h2>\n          Chat Gemini\n          <span style={{ fontSize: \"0.8em\", color: \"#007bff\", marginLeft: \"8px\" }}>\n            LangChain + OpenAI\n          </span>\n        </h2>\n        <div className=\"messages\" style={{ flexGrow: 1, overflowY: \"auto\" }}>\n          {messages.map((m, i) => (\n            <div\n              key={i}\n              className={`message ${m.user === \"Você\" ? \"user\" : \"bot\"}`}\n            >\n              <strong>{m.user}: </strong>\n              {m.content}\n            </div>\n          ))}\n          {loading && <div className=\"message bot\">Bot está digitando...</div>}\n        </div>\n        <form onSubmit={sendMessage} className=\"message-form\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder={\n              selectedConversation ? \"Digite sua mensagem...\" : \"Selecione uma conversa\"\n            }\n            disabled={!selectedConversation || loading}\n          />\n          <button type=\"submit\" disabled={!selectedConversation || loading || !inputMessage.trim()}>\n            <Send size={20} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}