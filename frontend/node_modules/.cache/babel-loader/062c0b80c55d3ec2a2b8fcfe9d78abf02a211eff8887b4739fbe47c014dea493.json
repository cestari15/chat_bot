{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Desktop\\\\chat_bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus } from \"lucide-react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  // ✅ Buscar todas as conversas\n  const fetchConversations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:8000/conversations\");\n      console.log(\"Conversas carregadas:\", res.data);\n      setConversations(res.data);\n      if (res.data.length > 0) {\n        // Seleciona automaticamente a primeira conversa existente\n        selectConversation(res.data[0]);\n      } else {\n        setSelectedConversation(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // ✅ Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/conversations\", {\n        title\n      });\n      console.log(\"Nova conversa criada:\", res.data);\n      setConversations(prev => [res.data, ...prev]);\n      setNewConversationTitle(\"\");\n      await selectConversation(res.data);\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err.response || err);\n      alert(\"Erro ao criar conversa. Verifique o console para detalhes.\");\n    }\n  };\n\n  // ✅ Selecionar conversa e carregar mensagens\n  const selectConversation = async conversation => {\n    if (!conversation || !conversation.id) {\n      console.warn(\"Nenhuma conversa válida selecionada:\", conversation);\n      setSelectedConversation(null);\n      setMessages([]);\n      return;\n    }\n    setSelectedConversation(conversation);\n    console.log(\"Selecionando conversa:\", conversation);\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/messages/${conversation.id}`);\n      console.log(\"Mensagens carregadas:\", res.data);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(\"Erro ao buscar mensagens:\", err.response || err);\n      setMessages([]);\n    }\n  };\n\n  // ✅ Enviar mensagem\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    if (!selectedConversation || !selectedConversation.id) {\n      alert(\"Selecione uma conversa antes de enviar uma mensagem!\");\n      return;\n    }\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n    setLoading(true);\n\n    // Exibe mensagem do usuário imediatamente\n    const tempMessage = {\n      user: \"Você\",\n      content: userMessage\n    };\n    setMessages(prev => [...prev, tempMessage]);\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        message: userMessage,\n        conversation_id: selectedConversation.id\n      });\n      console.log(\"Resposta do servidor:\", res.data);\n      const aiMessage = {\n        user: \"Bot\",\n        content: res.data.response\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err.response || err);\n      alert(\"Erro ao enviar mensagem. Veja console para detalhes.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Conversas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newConversationTitle,\n          onChange: e => setNewConversationTitle(e.target.value),\n          placeholder: \"T\\xEDtulo da conversa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewConversation,\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list\",\n        children: [conversations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma conversa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 42\n        }, this), conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conv.id ? \"selected\" : \"\"}`,\n          onClick: () => selectConversation(conv),\n          children: conv.title\n        }, conv.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Gemini\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.user === \"Você\" ? \"user\" : \"bot\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [m.user, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), m.content]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: \"Bot est\\xE1 digitando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: selectedConversation ? \"Digite sua mensagem...\" : \"Selecione uma conversa\",\n          disabled: !selectedConversation || loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedConversation || loading,\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NE2KumL3QLwvSHppfdcs/S8+Ez8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Send","Plus","jsxDEV","_jsxDEV","App","_s","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","inputMessage","setInputMessage","newConversationTitle","setNewConversationTitle","loading","setLoading","fetchConversations","res","get","console","log","data","length","selectConversation","err","error","createNewConversation","title","trim","post","prev","response","alert","conversation","id","warn","sendMessage","e","preventDefault","userMessage","tempMessage","user","content","message","conversation_id","aiMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","size","map","conv","m","i","onSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Rafael/Desktop/chat_bot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Send, Plus } from \"lucide-react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [newConversationTitle, setNewConversationTitle] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchConversations();\n  }, []);\n\n  // ✅ Buscar todas as conversas\n  const fetchConversations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:8000/conversations\");\n      console.log(\"Conversas carregadas:\", res.data);\n      setConversations(res.data);\n\n      if (res.data.length > 0) {\n        // Seleciona automaticamente a primeira conversa existente\n        selectConversation(res.data[0]);\n      } else {\n        setSelectedConversation(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error(\"Erro ao buscar conversas:\", err);\n    }\n  };\n\n  // ✅ Criar nova conversa\n  const createNewConversation = async () => {\n    const title = newConversationTitle.trim() || \"Nova Conversa\";\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/conversations\", { title });\n      console.log(\"Nova conversa criada:\", res.data);\n      setConversations((prev) => [res.data, ...prev]);\n      setNewConversationTitle(\"\");\n      await selectConversation(res.data);\n    } catch (err) {\n      console.error(\"Erro ao criar conversa:\", err.response || err);\n      alert(\"Erro ao criar conversa. Verifique o console para detalhes.\");\n    }\n  };\n\n  // ✅ Selecionar conversa e carregar mensagens\n  const selectConversation = async (conversation) => {\n    if (!conversation || !conversation.id) {\n      console.warn(\"Nenhuma conversa válida selecionada:\", conversation);\n      setSelectedConversation(null);\n      setMessages([]);\n      return;\n    }\n\n    setSelectedConversation(conversation);\n    console.log(\"Selecionando conversa:\", conversation);\n\n    try {\n      const res = await axios.get(`http://127.0.0.1:8000/messages/${conversation.id}`);\n      console.log(\"Mensagens carregadas:\", res.data);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(\"Erro ao buscar mensagens:\", err.response || err);\n      setMessages([]);\n    }\n  };\n\n  // ✅ Enviar mensagem\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    if (!selectedConversation || !selectedConversation.id) {\n      alert(\"Selecione uma conversa antes de enviar uma mensagem!\");\n      return;\n    }\n\n    const userMessage = inputMessage.trim();\n    setInputMessage(\"\");\n    setLoading(true);\n\n    // Exibe mensagem do usuário imediatamente\n    const tempMessage = { user: \"Você\", content: userMessage };\n    setMessages((prev) => [...prev, tempMessage]);\n\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        message: userMessage,\n        conversation_id: selectedConversation.id,\n      });\n\n      console.log(\"Resposta do servidor:\", res.data);\n\n      const aiMessage = { user: \"Bot\", content: res.data.response };\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (err) {\n      console.error(\"Erro ao enviar mensagem:\", err.response || err);\n      alert(\"Erro ao enviar mensagem. Veja console para detalhes.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Barra lateral */}\n      <div className=\"sidebar\">\n        <h2>Conversas</h2>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={newConversationTitle}\n            onChange={(e) => setNewConversationTitle(e.target.value)}\n            placeholder=\"Título da conversa\"\n          />\n          <button onClick={createNewConversation}>\n            <Plus size={16} />\n          </button>\n        </div>\n\n        <div className=\"conversation-list\">\n          {conversations.length === 0 && <p>Nenhuma conversa</p>}\n          {conversations.map((conv) => (\n            <div\n              key={conv.id}\n              className={`conversation-item ${\n                selectedConversation?.id === conv.id ? \"selected\" : \"\"\n              }`}\n              onClick={() => selectConversation(conv)}\n            >\n              {conv.title}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Área principal de chat */}\n      <div className=\"chat-area\">\n        <h2>Chat Gemini</h2>\n        <div className=\"messages\">\n          {messages.map((m, i) => (\n            <div\n              key={i}\n              className={`message ${m.user === \"Você\" ? \"user\" : \"bot\"}`}\n            >\n              <strong>{m.user}: </strong>\n              {m.content}\n            </div>\n          ))}\n          {loading && <div className=\"message bot\">Bot está digitando...</div>}\n        </div>\n\n        <form onSubmit={sendMessage} className=\"message-form\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder={\n              selectedConversation\n                ? \"Digite sua mensagem...\"\n                : \"Selecione uma conversa\"\n            }\n            disabled={!selectedConversation || loading}\n          />\n          <button type=\"submit\" disabled={!selectedConversation || loading}>\n            <Send size={20} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,QAAQ,cAAc;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdoB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,qCAAqC,CAAC;MAClEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9ChB,gBAAgB,CAACY,GAAG,CAACI,IAAI,CAAC;MAE1B,IAAIJ,GAAG,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACvB;QACAC,kBAAkB,CAACN,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,MAAM;QACLd,uBAAuB,CAAC,IAAI,CAAC;QAC7BE,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZL,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMC,KAAK,GAAGf,oBAAoB,CAACgB,IAAI,CAAC,CAAC,IAAI,eAAe;IAC5D,IAAI;MACF,MAAMX,GAAG,GAAG,MAAMpB,KAAK,CAACgC,IAAI,CAAC,qCAAqC,EAAE;QAAEF;MAAM,CAAC,CAAC;MAC9ER,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9ChB,gBAAgB,CAAEyB,IAAI,IAAK,CAACb,GAAG,CAACI,IAAI,EAAE,GAAGS,IAAI,CAAC,CAAC;MAC/CjB,uBAAuB,CAAC,EAAE,CAAC;MAC3B,MAAMU,kBAAkB,CAACN,GAAG,CAACI,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZL,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAACO,QAAQ,IAAIP,GAAG,CAAC;MAC7DQ,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;;EAED;EACA,MAAMT,kBAAkB,GAAG,MAAOU,YAAY,IAAK;IACjD,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAACC,EAAE,EAAE;MACrCf,OAAO,CAACgB,IAAI,CAAC,sCAAsC,EAAEF,YAAY,CAAC;MAClE1B,uBAAuB,CAAC,IAAI,CAAC;MAC7BE,WAAW,CAAC,EAAE,CAAC;MACf;IACF;IAEAF,uBAAuB,CAAC0B,YAAY,CAAC;IACrCd,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEa,YAAY,CAAC;IAEnD,IAAI;MACF,MAAMhB,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,kCAAkCe,YAAY,CAACC,EAAE,EAAE,CAAC;MAChFf,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9CZ,WAAW,CAACQ,GAAG,CAACI,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZL,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAACO,QAAQ,IAAIP,GAAG,CAAC;MAC/Df,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAM2B,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5B,YAAY,CAACkB,IAAI,CAAC,CAAC,EAAE;IAC1B,IAAI,CAACtB,oBAAoB,IAAI,CAACA,oBAAoB,CAAC4B,EAAE,EAAE;MACrDF,KAAK,CAAC,sDAAsD,CAAC;MAC7D;IACF;IAEA,MAAMO,WAAW,GAAG7B,YAAY,CAACkB,IAAI,CAAC,CAAC;IACvCjB,eAAe,CAAC,EAAE,CAAC;IACnBI,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,MAAMyB,WAAW,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAY,CAAC;IAC1D9B,WAAW,CAAEqB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEU,WAAW,CAAC,CAAC;IAE7C,IAAI;MACF,MAAMvB,GAAG,GAAG,MAAMpB,KAAK,CAACgC,IAAI,CAAC,4BAA4B,EAAE;QACzDc,OAAO,EAAEJ,WAAW;QACpBK,eAAe,EAAEtC,oBAAoB,CAAC4B;MACxC,CAAC,CAAC;MAEFf,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAE9C,MAAMwB,SAAS,GAAG;QAAEJ,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEzB,GAAG,CAACI,IAAI,CAACU;MAAS,CAAC;MAC7DtB,WAAW,CAAEqB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEe,SAAS,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOrB,GAAG,EAAE;MACZL,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAACO,QAAQ,IAAIP,GAAG,CAAC;MAC9DQ,KAAK,CAAC,sDAAsD,CAAC;IAC/D,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAK6C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExB9C,OAAA;MAAK6C,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB9C,OAAA;QAAA8C,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBlD,OAAA;QAAK6C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B9C,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEzC,oBAAqB;UAC5B0C,QAAQ,EAAGjB,CAAC,IAAKxB,uBAAuB,CAACwB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UACzDG,WAAW,EAAC;QAAoB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFlD,OAAA;UAAQwD,OAAO,EAAE/B,qBAAsB;UAAAqB,QAAA,eACrC9C,OAAA,CAACF,IAAI;YAAC2D,IAAI,EAAE;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENlD,OAAA;QAAK6C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAC/B3C,aAAa,CAACkB,MAAM,KAAK,CAAC,iBAAIrB,OAAA;UAAA8C,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACrD/C,aAAa,CAACuD,GAAG,CAAEC,IAAI,iBACtB3D,OAAA;UAEE6C,SAAS,EAAE,qBACT,CAAAxC,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAE4B,EAAE,MAAK0B,IAAI,CAAC1B,EAAE,GAAG,UAAU,GAAG,EAAE,EACrD;UACHuB,OAAO,EAAEA,CAAA,KAAMlC,kBAAkB,CAACqC,IAAI,CAAE;UAAAb,QAAA,EAEvCa,IAAI,CAACjC;QAAK,GANNiC,IAAI,CAAC1B,EAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOT,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNlD,OAAA;MAAK6C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9C,OAAA;QAAA8C,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBlD,OAAA;QAAK6C,SAAS,EAAC,UAAU;QAAAC,QAAA,GACtBvC,QAAQ,CAACmD,GAAG,CAAC,CAACE,CAAC,EAAEC,CAAC,kBACjB7D,OAAA;UAEE6C,SAAS,EAAE,WAAWe,CAAC,CAACpB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,EAAG;UAAAM,QAAA,gBAE3D9C,OAAA;YAAA8C,QAAA,GAASc,CAAC,CAACpB,IAAI,EAAC,IAAE;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC1BU,CAAC,CAACnB,OAAO;QAAA,GAJLoB,CAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKH,CACN,CAAC,EACDrC,OAAO,iBAAIb,OAAA;UAAK6C,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eAENlD,OAAA;QAAM8D,QAAQ,EAAE3B,WAAY;QAACU,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACnD9C,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE3C,YAAa;UACpB4C,QAAQ,EAAGjB,CAAC,IAAK1B,eAAe,CAAC0B,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UACjDG,WAAW,EACTlD,oBAAoB,GAChB,wBAAwB,GACxB,wBACL;UACD0D,QAAQ,EAAE,CAAC1D,oBAAoB,IAAIQ;QAAQ;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACFlD,OAAA;UAAQmD,IAAI,EAAC,QAAQ;UAACY,QAAQ,EAAE,CAAC1D,oBAAoB,IAAIQ,OAAQ;UAAAiC,QAAA,eAC/D9C,OAAA,CAACH,IAAI;YAAC4D,IAAI,EAAE;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChD,EAAA,CA3KQD,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AA6KZ,eAAeA,GAAG;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}